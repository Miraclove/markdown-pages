name: publish-to-medium
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Read the post
        id: post
        run: echo "::set-output name=data::$(cat ./content/post.md)"
      - uses: infraway/medium-post-markdown@main
        with:
          access_token: ${{ secrets.MEDIUM_ACCESS_TOKEN }}
          markdown: ${{ steps.post.outputs.data }}



# name: publish-to-medium
# on: [push]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - id: files
#         uses: jitterbit/get-changed-files@v1
#       - id: posts
#         name: Detecting posts from the changes
#         run: |
#           i=0
#           for changed_file in ${{ steps.files.outputs.added_modified }}; do
#             echo "Do something with ${changed_file}."
#             if [[ "${changed_file}" == "content/posts"* ]];
#             then
#               echo "File ${changed_file} matched post."
#               echo "::set-output name=post${i}::${changed_file}"
#               ((i=i+1))
#             fi
#           done
#       - if: steps.posts.outputs.post0
#         name: Create Medium Post
#         uses: philips-software/post-to-medium-action@v0.4.1
#         with:
#           integration_token: "${{ secrets.MEDIUM_ACCESS_TOKEN }}"
#           file: ${{ steps.posts.outputs.post0 }}
#           content_format: "markdown"
#           notify_followers: "false"
#           tags: "test,tag"
#           title: "title"
#           license: "all-rights-reserved"
#           publish_status: "draft"
        